import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { LRParser } from '@lezer/lr';
import { parser as parser$1 } from '@lezer/javascript';
import { parseMixed } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = /*@__PURE__*/LRParser.deserialize({
  version: 14,
  states: "!dQQOPOOOYOQO'#CaOOOO'#Cf'#CfOOOO'#Cc'#CcQQOPOOOOOO'#Cd'#CdObOQO,58{OOOO,58{,58{OOOO-E6a-E6aOOOO-E6b-E6bOOOO1G.g1G.g",
  stateData: "m~OQQOSPO~ORVOUTO~ORYOUTO~ORU~",
  goto: "pZPPPPP[P`fPlTQOSQSORWSQUPRXUTROS",
  nodeNames: "âš  Program Text JsEndTag JsStartTag JsTag JsText",
  maxTerm: 10,
  nodeProps: [
    ["openedBy", 3,"JsStartTag"],
    ["closedBy", 4,"JsEndTag"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "%URRVO#oh#o#p!v#p#qh#q#r#x#r;'Sh;'S;=`!p<%lOhRoVQPUQO#oh#o#p!U#p#qh#q#rh#r;'Sh;'S;=`!p<%lOhQ!ZTUQO#q!U#q#r!U#r;'S!U;'S;=`!j<%lO!UQ!mP;=`<%l!UR!sP;=`<%lhR!{VUQO#o!U#o#p#b#p#q!U#q#r!U#r;'S!U;'S;=`!j<%lO!UR#iTSPUQO#q!U#q#r!U#r;'S!U;'S;=`!j<%lO!UR$PVQPUQO#oh#o#p!U#p#qh#q#r$f#r;'Sh;'S;=`!p<%lOhR$oVQPRQUQO#oh#o#p!U#p#qh#q#rh#r;'Sh;'S;=`!p<%lOh",
  tokenizers: [0, 1],
  topRules: {"Program":[0,1]},
  tokenPrec: 26
});

const jsLanguage = /*@__PURE__*/LRLanguage.define({
    parser: /*@__PURE__*/parser.configure({
        wrap: /*@__PURE__*/parseMixed(node => {
            return node.name === "JsText" ? { parser: parser$1 } : null;
        })
    }),
    languageData: {
        closeBrackets: { brackets: ["(", "[", "{", "'", '"'] }
    }
});
const js = function () {
    return new LanguageSupport(jsLanguage);
};

export { js, jsLanguage, parser };
