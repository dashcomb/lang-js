import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { LRParser } from '@lezer/lr';
import { parser as parser$1 } from '@lezer/javascript';
import { parseMixed } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = /*@__PURE__*/LRParser.deserialize({
  version: 14,
  states: "!WQOOO?MrOPOOO?MvOPOOO'#Cf'#CfPOOO'#Cc'#CcPOOO'#Cd'#CdPOOO,58{,58{POOO-E6a-E6aPOOO-E6b-E6bPOOO1G.g1G.g",
  stateData: "Q~O",
  goto: "QPP",
  nodeNames: "âš  Program Text JsStartCloseTag JsStartTag JsTag JsText",
  maxTerm: 10,
  nodeProps: [
    ["openedBy", 3,"JsStartTag"],
    ["closedBy", 4,"JsStartCloseTag"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "o~RQ#o#pX#q#rd~[P#o#p_~dOS~~gP#q#rj~oOR~",
  tokenizers: [],
  topRules: {"Program":[0,1]},
  tokenPrec: 0
});

const jsLanguage = /*@__PURE__*/LRLanguage.define({
    parser: /*@__PURE__*/parser.configure({
        wrap: /*@__PURE__*/parseMixed(node => {
            return node.name === "JsText" ? { parser: parser$1 } : null;
        }),
        // props: [
        //   styleTags({
        //     "{{ }}": t.paren
        //   }),
        // ]
    })
});
const js = function () {
    return new LanguageSupport(jsLanguage);
};

export { js, jsLanguage, parser };
