import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { LRParser } from '@lezer/lr';
import { parser as parser$1 } from '@lezer/javascript';
import { parseMixed } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = /*@__PURE__*/LRParser.deserialize({
  version: 14,
  states: "!dQQOPOOOYOQO'#CaOOOO'#Cf'#CfOOOO'#Cc'#CcQQOPOOOOOO'#Cd'#CdObOQO,58{OOOO,58{,58{OOOO-E6a-E6aOOOO-E6b-E6bOOOO1G.g1G.g",
  stateData: "j~OQQOSPO~ORVOUTO~ORYOUTO~O",
  goto: "pZPPPPP[P`fPlTQOSQSORWSQUPRXUTROS",
  nodeNames: "âš  Program Text JsEndTag JsStartTag JsTag JsText",
  maxTerm: 10,
  nodeProps: [
    ["openedBy", 3,"JsStartTag"],
    ["closedBy", 4,"JsEndTag"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "#w~RVO#oh#o#p!p#p#qh#q#r#l#r;'Sh;'S;=`!j<%lOhRoUUQQPO#oh#o#p!R#p#qh#r;'Sh;'S;=`!j<%lOhQ!WSUQO#q!R#r;'S!R;'S;=`!d<%lO!RQ!gP;=`<%l!RR!mP;=`<%lhR!uUUQO#o!R#o#p#X#p#q!R#r;'S!R;'S;=`!d<%lO!RR#`SSPUQO#q!R#r;'S!R;'S;=`!d<%lO!R~#oP#q#r#r~#wOR~",
  tokenizers: [0, 1],
  topRules: {"Program":[0,1]},
  tokenPrec: 0
});

const jsLanguage = /*@__PURE__*/LRLanguage.define({
    parser: /*@__PURE__*/parser.configure({
        wrap: /*@__PURE__*/parseMixed(node => {
            return node.name === "JsText" ? { parser: parser$1 } : null;
        })
    }),
    languageData: {
        closeBrackets: { brackets: ["(", "[", "{", "'", '"'] }
    }
});
const js = function () {
    return new LanguageSupport(jsLanguage);
};

export { js, jsLanguage, parser };
