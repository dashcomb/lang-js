'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var language = require('@codemirror/language');
var highlight = require('@lezer/highlight');
var lr = require('@lezer/lr');
var javascript = require('@lezer/javascript');
var common = require('@lezer/common');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "!^QQOPOOOVOQO'#C`QQOPOOOOOO'#Cb'#CbOOOO'#Cc'#CcO_OQO,58zOOOO,58z,58zOOOO-E6`-E6`OOOO-E6a-E6aOOOO1G.f1G.f",
  stateData: "g~ORPO~OQUOTSO~OQXOTSO~O",
  goto: "iWPPPPXP]cTROQQQORVQQTPRWT",
  nodeNames: "âš  Program EndJsTag StartJsTag JsTag JsText",
  maxTerm: 8,
  nodeProps: [
    ["openedBy", 2,"StartJsTag"],
    ["closedBy", 3,"EndJsTag"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "#W~RVO#oh#o#p!P#p#qh#q#r!{#r;'Sh;'S;=`y<%lOhQmSTQO#qh#r;'Sh;'S;=`y<%lOhQ|P;=`<%lhR!UUTQO#oh#o#p!h#p#qh#r;'Sh;'S;=`y<%lOhR!oSTQRPO#qh#r;'Sh;'S;=`y<%lOh~#OP#q#r#R~#WOQ~",
  tokenizers: [0, 1],
  topRules: {"Program":[0,1]},
  tokenPrec: 0
});

const jsLanguage = language.LRLanguage.define({
    parser: parser.configure({
        wrap: common.parseMixed(node => {
            console.log(node.name);
            return node.name === "JsText" ? { parser: javascript.parser } : null;
        }),
        props: [
            highlight.styleTags({
                StartJsTag: highlight.tags.paren,
                EndJsTag: highlight.tags.paren
            }),
        ]
    })
});
const js = function () {
    return new language.LanguageSupport(jsLanguage);
};

exports.js = js;
exports.jsLanguage = jsLanguage;
exports.parser = parser;
